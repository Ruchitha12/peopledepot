////People Depot Schema Entity Relationship Diagram
// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

TablePartial AbstractBaseModel {
  id uuid [pk, unique, not null]
  created_at DateTimeField [not null, default: `now()`]
  updated_at DateTimeField [not null, default: `now()`]
}

Table Accomplishment {
  ~AbstractBaseModel
  project uuid [ref: > Project.id]
  title varchar
  description varchar
  url URLField
  accomplished_on DateField
}

Table Affiliate {
  ~AbstractBaseModel
  partner_name varchar
  partner_logo URLField
  is_active boolean
  url URLField
  is_org_sponsor boolean
  is_org_partner boolean
}

Table CancelledEvent {
  ~AbstractBaseModel
  event int [ref: > Event.id]
  cancelled_event_date DateTimeField
  reason varchar
  user int [ref: > User.id]
  name varchar
  description varchar
  event_type int [ref: > EventType.id]
  start_time datetime
  duration_in_min int
  project int [ref: > Project.id]
  video_conference_url URLField
  location int [ref: > Location.id]
  org int [ref: > Org.id]
  additional_info varchar
  must_attend JSON
  should_attend JSON
  could_attend JSON
}

Table CheckIn {
  ~AbstractBaseModel
  occurance int [ref: > EventOccurrence.id]
  user int [ref: > User.id]
  checked_in DateTimeField
}

Table CheckType {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table Event {
  ~AbstractBaseModel
  name varchar
  description varchar
  event_type int [ref: > EventType.id]
  start_time DateTimeField
  duration_in_min int
  rrule RecurrenceField
  project int [ref: > Project.id]
  video_conference_url URLField
  location int [ref: > Location.id]
  org int [ref: > Org.id]
  additional_info varchar
  must_attend JSON
  should_attend JSON
  could_attend JSON
}

Table EventOccurrence {
  ~AbstractBaseModel
  event int [ref: > Event.id]
  name varchar
  description varchar
  event_type int [ref: > EventType.id]
  start_time DateTimeField
  duration_in_min int
  project int [ref: > Project.id]
  video_conference_url URLField
  location int [ref: > Location.id]
  org int [ref: > Org.id]
  additional_info varchar
  must_attend JSON
  should_attend JSON
  could_attend JSON
}

Table EventType {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table Faq {
  ~AbstractBaseModel
  question varchar
  answer varchar
  project int [ref: > Project.id]
  permission_type int [ref: > PermissionType.id]
  title varchar
}

Table FaqViewed {
  ~AbstractBaseModel
  faq int [ref: > Faq.id]
  read DateTimeField
}

Table Language {
  ~AbstractBaseModel
  name varchar
  description varchar
  logo URLField
}

Table LeadershipType {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table Location {
  ~AbstractBaseModel
  name varchar
  address_line_1 varchar
  address_line_2 varchar
  city varchar
  state varchar
  zip varchar
  phone varchar
}

Table ModernJobTitle {
  ~AbstractBaseModel
  soc_detailed int [ref: > SocDetailed.id]
  title varchar
}

Table Org {
  ~AbstractBaseModel
  name varchar
  time_zone varchar
}

Table UserPermission {
  ~AbstractBaseModel
  user int [ref: > User.id]
  project int [ref: > Project.id]
  permission_type int [ref: > PermissionType.id]
  practice_area int [ref: > PracticeArea.id]
  granted DateTimeField
  ended DateTimeField
  created_by int [ref: > User.id]
  updated_by int [ref: > User.id]
}

Table PermissionHistory {
  ~AbstractBaseModel
  user int [ref: > User.id]
  project int [ref: > Project.id]
  permission_type int [ref: > PermissionType.id]
  practice_area int [ref: > PracticeArea.id]
  granted DateTimeField
  ended DateTimeField
  created_by int
  updated_by int
}

Table PermissionType {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table PracticeArea {
  ~AbstractBaseModel
  name varchar
  description varchar
  image URLField
}

Table ProgramArea {
  ~AbstractBaseModel
  name varchar
  description varchar
  image URLField
}

Table Project {
  ~AbstractBaseModel
  name String
  description String
  completed_on date
  github_org int [ref: - ProjectUrl.id]
  github_primary_repo int [ref: - ProjectUrl.id]
  current_status int [ref: > ProjectProgramAreaStatusType.id]
  hide Boolean
  location int [ref: > Location.id]
  google_drive int [ref: > ProjectUrl.id]
  project_leads int[] (user_id)
  leadership_type int [ref: > LeadershipType.id]
  image_logo URLField
  image_hero URLField
  image_icon URLField
}

Table ProjectAffiliateXref {
  ~AbstractBaseModel
  affiliate int [ref: > Affiliate.id]
  project int [ref: > Project.id]
  ended_on DateField
  is_sponsor boolean
  is_partner boolean
}

Table ProjectLanguageXref {
  ~AbstractBaseModel
  project int [ref: > Project.id]
  language int [ref: > Language.id]
  started_on DateTimeField
  ended_on DateTimeField
}

Table ProjectProgramAreaXref {
  ~AbstractBaseModel
  project int [ref: > Project.id]
  program_area int [ref: > ProgramArea.id]
}

Table ProjectSdgXref {
  ~AbstractBaseModel
  sdg int [ref: > Sdg.id]
  project int [ref: > Project.id]
  ended_on DateField
}

Table ProjectStackElementXref {
  ~AbstractBaseModel
  project int [ref: > Project.id]
  stack_element int [ref: > StackElement.id]
  removed_on DateField
}

Table ProjectProgramAreaStatusType {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table ProjectProgramAreaStatusHistory {
  ~AbstractBaseModel
  project int [ref: > Project.id]
  status int [ref: > ProjectProgramAreaStatusType.id]
}

Table ProjectUrl {
  ~AbstractBaseModel
  project int [ref: > Project.id]
  url_type int [ref: > UrlType.id]
  name CharField
  external_id CharField
  url URLField
  url_status_type int [ref: > UrlStatusType.id]
}

Table Referrer {
  ~AbstractBaseModel
  name varchar
  url URLField
  referrer_type int [ref: > ReferrerType.id]
  contact_name varchar
  contact_email EmailField
}

Table ReferrerType {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table Sdg {
  ~AbstractBaseModel
  name varchar
  description varchar
  image URLField
}

Table SdgTargetIndicator {
  ~AbstractBaseModel
  sdg int [ref: > Sdg.id]
  code varchar
  description_number varchar
  description_text varchar
}

Table Skill {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table SocBroad {
  ~AbstractBaseModel
  soc_minor int [ref: > SocMinor.id]
  occ_code varchar
  title varchar
}

Table SocDetailed {
  ~AbstractBaseModel
  soc_broad int [ref: > SocBroad.id]
  occ_code varchar
  title varchar
  description varchar
}

Table SocMajor {
  ~AbstractBaseModel
  occ_code varchar
  title varchar
}

Table SocMinor {
  ~AbstractBaseModel
  soc_major int [ref: > SocMajor.id]
  occ_code varchar
  title varchar
}

Table StackElement {
  ~AbstractBaseModel
  name varchar
  description varchar
  url URLField
  logo URLField
  active boolean
  stack_element_type int [ref: > StackElementType.id]
}

Table StackElementType {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table UrlStatusType {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table UrlType {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table User {
  ~AbstractBaseModel
  first_name varchar
  last_name varchar
  email EmailField
  email_gmail EmailField
  email_preferred EmailField
  is_active bool [default: True]
  user_status int [ref: > UserStatusType.id]
  practice_area_primary int [ref: > PracticeArea.id]
  practice_area_secondary int[] [ref: <> PracticeArea.id]
  job_title_current varchar
  practice_area_target int[] [ref: <> PracticeArea.id]
  job_title_target varchar
  current_skills varchar
  target_skills varchar
  linkedin_account URLField
  referred_by int [ref: > Referrer.id]
  github_handle varchar
  phone varchar
  texting_ok boolean
  slack_id varchar(11)
  time_zone varchar
}

Table UserAvailability {
  ~AbstractBaseModel
  user int [ref: > User.id, not null]
  day_of_week day (enum)
  start TimeField
  duration_minutes int
}

Table UserCheck {
  ~AbstractBaseModel
  user int [ref: > User.id]
  org int [ref: > Org.id]
  check_type int [ref: > CheckType.id]
  result boolean
  reminder_start DateTimeField
  completed_at DateTimeField
  project int [ref: > Project.id]
}

Table UserEmploymentHistory {
  ~AbstractBaseModel
  user int [ref: > User.id]
  soc_detailed int [ref: > SocDetailed.id]
  title varchar
}

Table UserStatusType {
  ~AbstractBaseModel
  name varchar
  description varchar
}

Table Win {
  ~AbstractBaseModel
  user int [ref: > User.id]
  practice_areas int[] [ref: <> PracticeArea.id]
  teams int[] [ref: <> Project.id]
  description varchar
  win_type int [ref: > WinType.id]
  can_use_photo boolean
}

Table WinType {
  ~AbstractBaseModel
  name varchar
  display_text varchar
}
